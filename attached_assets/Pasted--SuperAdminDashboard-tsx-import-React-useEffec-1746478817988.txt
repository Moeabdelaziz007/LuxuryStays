// ✅ SuperAdminDashboard.tsx مع صفحة المستخدمين، الخدمات، الإشعارات، والثيم
import React, { useEffect, useState } from "react";
import { collection, getDocs, addDoc, serverTimestamp, doc, setDoc } from "firebase/firestore";
import { db } from "@/lib/firebase";
import { FaUsers, FaHome, FaTools, FaBullhorn, FaPalette, FaBell } from "react-icons/fa";

export default function SuperAdminDashboard() {
  const [users, setUsers] = useState<any[]>([]);
  const [properties, setProperties] = useState<any[]>([]);
  const [services, setServices] = useState<any[]>([]);
  const [view, setView] = useState("main");
  const [notification, setNotification] = useState("");
  const [target, setTarget] = useState("all");
  const [sent, setSent] = useState(false);
  const [theme, setTheme] = useState({ primary: "#00FF94", background: "#000000" });
  const [savedTheme, setSavedTheme] = useState(false);

  useEffect(() => {
    const fetchData = async () => {
      const usersSnap = await getDocs(collection(db, "users"));
      setUsers(usersSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));

      const propsSnap = await getDocs(collection(db, "properties"));
      setProperties(propsSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));

      const servSnap = await getDocs(collection(db, "services"));
      setServices(servSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
    };
    fetchData();
  }, []);

  const sendNotification = async () => {
    if (!notification) return;
    const payload = {
      message: notification,
      target,
      createdAt: serverTimestamp(),
    };
    await addDoc(collection(db, "notifications"), payload);
    setSent(true);
    setNotification("");
  };

  const saveTheme = async () => {
    await setDoc(doc(db, "settings", "theme"), theme);
    setSavedTheme(true);
    setTimeout(() => setSavedTheme(false), 2000);
  };

  if (view === "theme") {
    return (
      <div className="bg-black text-white min-h-screen p-8">
        <h1 className="text-3xl font-bold text-green-400 mb-6">🎨 إعدادات الثيم</h1>
        <button onClick={() => setView("main")} className="mb-6 text-sm text-green-400 underline">← رجوع</button>
        <div className="bg-gray-900 p-6 rounded-xl max-w-xl mx-auto space-y-4">
          <label className="block">
            <span className="text-white">🌈 اللون الرئيسي:</span>
            <input type="color" value={theme.primary} onChange={e => setTheme({ ...theme, primary: e.target.value })} className="w-full mt-2" />
          </label>
          <label className="block">
            <span className="text-white">🖤 خلفية التطبيق:</span>
            <input type="color" value={theme.background} onChange={e => setTheme({ ...theme, background: e.target.value })} className="w-full mt-2" />
          </label>
          <button onClick={saveTheme} className="bg-green-400 text-black font-bold py-2 px-4 rounded hover:scale-105">
            حفظ الإعدادات
          </button>
          {savedTheme && <p className="text-green-400 mt-2">✅ تم حفظ الثيم!</p>}
        </div>
      </div>
    );
  }

  // ... باقي الأكواد: users / services / notifications كما هي

  const cards = [
    { icon: <FaUsers size={24} />, label: `المستخدمين (${users.length})`, desc: "إدارة الحسابات والصلاحيات", color: "bg-gradient-to-br from-green-400 to-lime-500", onClick: () => setView("users") },
    { icon: <FaHome size={24} />, label: `العقارات (${properties.length})`, desc: "التحكم بالعقارات المعروضة", color: "bg-gradient-to-br from-blue-400 to-cyan-500" },
    { icon: <FaTools size={24} />, label: `الخدمات (${services.length})`, desc: "تعديل وإضافة الخدمات", color: "bg-gradient-to-br from-purple-500 to-pink-500", onClick: () => setView("services") },
    { icon: <FaPalette size={24} />, label: "الثيم والتصميم", desc: "تخصيص الهوية البصرية", color: "bg-gradient-to-br from-yellow-400 to-orange-500", onClick: () => setView("theme") },
    { icon: <FaBell size={24} />, label: "الإشعارات", desc: "إرسال تنبيهات عامة أو خاصة", color: "bg-gradient-to-br from-red-400 to-pink-600", onClick: () => setView("notifications") },
    { icon: <FaBullhorn size={24} />, label: "العروض", desc: "إدارة العروض الترويجية", color: "bg-gradient-to-br from-indigo-500 to-blue-700" },
  ];

  return (
    <div className="bg-black text-white min-h-screen p-8">
      <h1 className="text-4xl font-bold text-green-400 mb-10 text-center">لوحة المشرف العام</h1>
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        {cards.map((card, i) => (
          <div key={i} onClick={card.onClick} className={`rounded-2xl p-6 shadow-xl ${card.color} hover:scale-105 transition-all cursor-p